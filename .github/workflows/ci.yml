name: Simplified CI

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    name: Validate Code, Build, and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Code Quality Checks
        run: |
          pnpm tsc --noEmit
          pnpm lint
          pnpm prettier --check "**/*.{ts,tsx,js,jsx,json,md}"

      - name: Run Security Checks
        run: |
          pnpm audit --recursive
          
      - name: Build all packages
        run: pnpm build
        
      - name: Run unit tests
        run: pnpm test

  package:
    name: Package Application for Release
    runs-on: ${{ matrix.os }}
    needs: [validate]
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.8
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build and package app
        run: |
          pnpm build
          pnpm package
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false # Skip code signing in CI for now
          
      - name: Upload macOS Package
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: packaged-app-macOS
          path: dist/*.dmg

      - name: Upload Windows Package
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: packaged-app-Windows
          path: dist/*.exe 