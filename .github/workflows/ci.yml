name: CI/CD Pipeline

on:
  push:
    branches: [master, main]
    tags: ['v*']
  pull_request:
    branches: [master, main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Turbo Cache
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Run Quality Checks (Parallel)
        run: |
          npx turbo run lint typecheck build --parallel
          
      - name: Run Tests
        run: npm test

      - name: Basic Security Audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

  build-and-release:
    name: Build & Release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: quality-gate
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Turbo Cache
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Build and Package
        run: |
          npx turbo run build
          npm run package
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Compute checksums
        shell: bash
        run: |
          cd dist
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            find . -name "*.dmg" -exec shasum -a 256 {} \; > SHA256SUMS-macOS.txt
          else
            find . -name "*.exe" -exec sha256sum {} \; > SHA256SUMS-Windows.txt
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: installers-${{ runner.os }}
          path: |
            dist/*.dmg
            dist/*.exe
            dist/SHA256SUMS-*.txt

  create-release:
    name: Create Release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build-and-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/*.dmg
            artifacts/**/*.exe
            artifacts/**/SHA256SUMS-*.txt
          generate_release_notes: true
          draft: false
          prerelease: false