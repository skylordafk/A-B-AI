echo "🔍 Running pre-commit checks..."

# Run lint-staged for formatting and linting
echo "📝 Running lint-staged..."
npx lint-staged

# Check for console.log in production code
echo "🔍 Checking for console.log in production code..."
if grep -r "console\.log" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" \
   --exclude-dir="tests" --exclude-dir="test-results" --exclude-dir="node_modules" \
   --exclude-dir="dist" --exclude-dir="build" \
   --exclude="*test*" --exclude="*spec*" --exclude="electron.js" apps/ 2>/dev/null; then
  echo "❌ Error: Found console.log statements in production code!"
  echo "Please remove console.log statements or use console.warn/console.error instead."
  exit 1
fi

# Check for exposed secrets
echo "🔑 Checking for exposed secrets..."
SECRET_PATTERNS=(
  "sk-[a-zA-Z0-9]{48}"
  "AIza[0-9A-Za-z-_]{35}"
  "ghp_[0-9a-zA-Z]{36}"
  "api[_-]?key.*[:=].*['\"][a-zA-Z0-9]{20,}['\"]"
  "stripe.*[:=].*['\"]sk_[a-zA-Z0-9]{24,}['\"]"
)

for pattern in "${SECRET_PATTERNS[@]}"; do
  if git diff --cached --name-only | xargs grep -E "$pattern" 2>/dev/null | \
     grep -v -E "(process\.env|example|mock|test|spec)"; then
    echo "❌ Error: Found potential exposed secret!"
    echo "Please use environment variables for sensitive data."
    exit 1
  fi
done

# Run TypeScript check on staged files
echo "🔍 Running TypeScript check..."
echo "Checking main app..."
if ! (cd apps/main && npx tsc --noEmit); then
  echo "❌ Error: TypeScript compilation failed in main app!"
  exit 1
fi

echo "Checking UI app..."
if ! (cd apps/ui && npx tsc --noEmit); then
  echo "❌ Error: TypeScript compilation failed in UI app!"
  exit 1
fi

# Run tests if any test files are modified
if git diff --cached --name-only | grep -E "\.(test|spec)\.(ts|tsx|js|jsx)$" >/dev/null; then
  echo "🧪 Test files modified, running tests..."
  if ! pnpm test; then
    echo "❌ Error: Tests failed!"
    exit 1
  fi
fi

echo "✅ All pre-commit checks passed!"
